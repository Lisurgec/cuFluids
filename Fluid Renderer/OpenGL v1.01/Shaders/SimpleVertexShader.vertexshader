#version 330 core

//layout(location = 0) in vec3 vertexPosition_modelspace;
//layout(location = 1) in vec3 vertexColor;
//
//uniform mat4 MVP;
//out vec3 fragmentColor;
//
//void main(){
////Output position of the vertex in clip space
//	vec4 v = vec4(vertexPosition_modelspace,1); //Transform homogenous 4D vector
//	gl_Position = MVP * v;
//
//	fragmentColor = vertexColor;
//}


layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;

out vec2 UV;

uniform mat4 MVP;

void main() {

	gl_Position = MVP * vec4(vertexPosition_modelspace, 1);

	UV = vertexUV;

}